import requests
import os
import json
import datetime
from dotenv import load_dotenv
load_dotenv()


VT_API_KEY = os.getenv("VT_API_KEY")

def check_ip(ip):
    url = f"https://www.virustotal.com/api/v3/ip_addresses/{ip}"
    headers = {"x-apikey": VT_API_KEY}
    res = requests.get(url, headers=headers)
    return res.json() if res.ok else res.text

def save_vt_results(ip, data, output_format="both"):
    """
    Save VirusTotal results to file(s)
    output_format: "json", "text", or "both"
    """
    timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
    base_filename = f"vt_scan_{ip}_{timestamp}"
    
    results = []
    
    if output_format in ["json", "both"]:
        # Save JSON format
        json_filename = f"{base_filename}.json"
        with open(json_filename, 'w', encoding='utf-8') as f:
            json.dump({
                "scan_info": {
                    "ip": ip,
                    "timestamp": datetime.datetime.now().isoformat(),
                    "tool": "VirusTotal API v3"
                },
                "results": data
            }, f, indent=2, ensure_ascii=False)
        results.append(json_filename)
    
    if output_format in ["text", "both"]:
        # Save human-readable text format
        txt_filename = f"{base_filename}.txt"
        with open(txt_filename, 'w', encoding='utf-8') as f:
            write_readable_report(f, ip, data)
        results.append(txt_filename)
    
    return results[0] if len(results) == 1 else results

def write_readable_report(file, ip, data):
    """Write a human-readable report"""
    file.write("=" * 80 + "\n")
    file.write(f"VIRUSTOTAL IP ANALYSIS REPORT\n")
    file.write("=" * 80 + "\n")
    file.write(f"IP Address: {ip}\n")
    file.write(f"Scan Time: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
    file.write(f"Generated by: CyberCLI Tool\n")
    file.write("=" * 80 + "\n\n")
    
    if 'data' not in data:
        file.write(f"ERROR: {data}\n")
        return
    
    attributes = data['data'].get('attributes', {})
    
    # Basic Information
    file.write("üìç BASIC INFORMATION\n")
    file.write("-" * 40 + "\n")
    file.write(f"Country: {attributes.get('country', 'Unknown')}\n")
    file.write(f"Continent: {attributes.get('continent', 'Unknown')}\n")
    file.write(f"AS Owner: {attributes.get('as_owner', 'Unknown')}\n")
    file.write(f"AS Number: {attributes.get('asn', 'Unknown')}\n")
    file.write(f"Network: {attributes.get('network', 'Unknown')}\n\n")
    
    # Analysis Results
    last_analysis = attributes.get('last_analysis_results', {})
    file.write("üõ°Ô∏è SECURITY ANALYSIS\n")
    file.write("-" * 40 + "\n")
    
    categories = {'malicious': [], 'suspicious': [], 'undetected': [], 'harmless': []}
    
    for engine, result in last_analysis.items():
        category = result.get('category', 'unknown')
        if category in categories:
            categories[category].append({
                'engine': engine,
                'result': result.get('result', 'N/A')
            })
    
    # Summary
    total = len(last_analysis)
    file.write(f"Total Engines: {total}\n")
    file.write(f"üî¥ Malicious: {len(categories['malicious'])}\n")
    file.write(f"üü° Suspicious: {len(categories['suspicious'])}\n")
    file.write(f"üü¢ Harmless: {len(categories['harmless'])}\n")
    file.write(f"‚ö™ Undetected: {len(categories['undetected'])}\n\n")
    
    # Detailed Results
    if categories['malicious']:
        file.write("üö® MALICIOUS DETECTIONS:\n")
        for detection in categories['malicious']:
            file.write(f"  ‚Ä¢ {detection['engine']}: {detection['result']}\n")
        file.write("\n")
    
    if categories['suspicious']:
        file.write("‚ö†Ô∏è SUSPICIOUS DETECTIONS:\n")
        for detection in categories['suspicious']:
            file.write(f"  ‚Ä¢ {detection['engine']}: {detection['result']}\n")
        file.write("\n")
    
    # Additional Information
    if 'last_analysis_date' in attributes:
        analysis_date = datetime.datetime.fromtimestamp(attributes['last_analysis_date'])
        file.write(f"Last Analysis Date: {analysis_date.strftime('%Y-%m-%d %H:%M:%S')}\n")
    
    file.write("\n" + "=" * 80 + "\n")
    file.write("Report generated by CyberCLI - VirusTotal Integration\n")
    file.write("=" * 80 + "\n")
